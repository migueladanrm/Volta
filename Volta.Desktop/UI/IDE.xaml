<Window x:Class="Volta.UI.IDE"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Volta.UI"
        xmlns:controls="clr-namespace:Volta.UI.Controls"
        mc:Ignorable="d"
        Title="Volta IDE" Height="700" Width="1200" MinHeight="550" MinWidth="800"
        WindowStartupLocation="CenterScreen" UseLayoutRounding="True" Icon="\Resources/volta.ico" >

    <Window.InputBindings>
        <KeyBinding Key="Esc" Command="{Binding HideSecondaryLayoutCommand}"/>
        <KeyBinding Key="O" Modifiers="Ctrl" Command="{Binding OpenFileCommand}"/>
        <KeyBinding Key="N" Modifiers="Ctrl" Command="{Binding NewFileCommand}"/>
        <KeyBinding Key="T" Modifiers="Ctrl" Command="{Binding TestCommand}"/>
        <KeyBinding Key="W" Modifiers="Ctrl" Command="{Binding CloseTabCommand}"/>
        <KeyBinding Key="S" Modifiers="Ctrl" Command="{Binding SaveFileCommand}"/>
        <KeyBinding Key="E" Modifiers="Ctrl+Shift" Command="{Binding AlternateErrorListCommand}"/>
    </Window.InputBindings>

    <Window.Resources>
        <DropShadowEffect x:Key="DefaultShadowEffect" Direction="270" Opacity="0.25" ShadowDepth="3"/>
        <TransformGroup x:Key="DefaultRenderTransform" >
            <ScaleTransform/>
            <SkewTransform/>
            <RotateTransform/>
            <TranslateTransform/>
        </TransformGroup>
        <Style x:Key="Dialog.Container" TargetType="{x:Type Border}">
            <Setter Property="Background" Value="White"/>
            <Setter Property="Effect">
                <Setter.Value>
                    <DropShadowEffect BlurRadius="3" Direction="270" Opacity="0.25" ShadowDepth="3"/>
                </Setter.Value>
            </Setter>
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="Padding" Value="10"/>
            <Setter Property="RenderTransform" Value="{StaticResource DefaultRenderTransform}"/>
            <Setter Property="RenderTransformOrigin" Value="0.5,0.5"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
        </Style>

        <Style x:Key="HorizontalDivider" TargetType="{x:Type Border}">
            <Setter Property="Height" Value="1"/>
            <Setter Property="Background" Value="#FFC8C8C8"/>
        </Style>

        <Storyboard x:Key="Storyboard.LayoutSecondary.Hide">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="LayoutSecondary">
                <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="0"/>
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Key="Storyboard.LayoutSecondary.Show">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="LayoutSecondary">
                <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="1"/>
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Key="Storyboard.Dialog.Hide">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)">
                <EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="0.5">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <BackEase EasingMode="EaseInOut" Amplitude="0.3"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)">
                <EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="0.5">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <BackEase EasingMode="EaseInOut" Amplitude="0.3"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)">
                <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="0"/>
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Key="Storyboard.Dialog.Show">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)">
                <EasingDoubleKeyFrame KeyTime="0" Value="0.5">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <CubicEase EasingMode="EaseOut"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
                <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="1">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <CubicEase EasingMode="EaseOut"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)">
                <EasingDoubleKeyFrame KeyTime="0" Value="0.5">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <CubicEase EasingMode="EaseOut"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
                <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="1">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <CubicEase EasingMode="EaseOut"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)">
                <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="1"/>
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>
        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" StrokeDashArray="1 2" SnapsToDevicePixels="true" StrokeThickness="1" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="Button.Static.Background" Color="#FFDDDDDD"/>
        <SolidColorBrush x:Key="Button.Static.Border" Color="#FF707070"/>
        <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#FFBEE6FD"/>
        <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#FF3C7FB1"/>
        <SolidColorBrush x:Key="Button.Pressed.Background" Color="#FFC4E5F6"/>
        <SolidColorBrush x:Key="Button.Pressed.Border" Color="#FF2C628B"/>
        <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4"/>
        <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5"/>
        <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383"/>
        <Style x:Key="ToolbarButtonStyle" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.MouseOver.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="FocusVisual1">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" StrokeDashArray="1 2" SnapsToDevicePixels="true" StrokeThickness="1" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="Button.Static.Background1" Color="#FFDDDDDD"/>
        <SolidColorBrush x:Key="Button.Static.Border1" Color="#FF707070"/>
        <SolidColorBrush x:Key="Button.MouseOver.Background1" Color="#FFBEE6FD"/>
        <SolidColorBrush x:Key="Button.MouseOver.Border1" Color="#FF3C7FB1"/>
        <SolidColorBrush x:Key="Button.Pressed.Background1" Color="#FFC4E5F6"/>
        <SolidColorBrush x:Key="Button.Pressed.Border1" Color="#FF2C628B"/>
        <SolidColorBrush x:Key="Button.Disabled.Background1" Color="#FFF4F4F4"/>
        <SolidColorBrush x:Key="Button.Disabled.Border1" Color="#FFADB2B5"/>
        <SolidColorBrush x:Key="Button.Disabled.Foreground1" Color="#FF838383"/>
        <LinearGradientBrush x:Key="VoltaButton.MouseOver.Background" EndPoint="0.5,1" StartPoint="0.5,0">
            <GradientStop Color="#FF628EF7"/>
            <GradientStop Color="#FF2170C5" Offset="1"/>
        </LinearGradientBrush>
        <Style x:Key="VoltaButton" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual1}"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderBrush">
                <Setter.Value>
                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                        <GradientStop Color="#FF628EF7"/>
                        <GradientStop Color="#FF2170C5" Offset="1"/>
                    </LinearGradientBrush>
                </Setter.Value>
            </Setter>
            <Setter Property="FontFamily" Value="Segoe UI Semibold"/>
            <Setter Property="FontSize" Value="15"/>
            <Setter Property="Foreground">
                <Setter.Value>
                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                        <GradientStop Color="#FF628EF7"/>
                        <GradientStop Color="#FF2170C5" Offset="1"/>
                    </LinearGradientBrush>
                </Setter.Value>
            </Setter>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" SnapsToDevicePixels="true"
                                CornerRadius="7">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource VoltaButton.MouseOver.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border1}"/>
                                <Setter Property="Foreground" Value="White"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background1}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border1}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background1}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border1}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground1}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Storyboard x:Key="Storyboard.MC.Hide">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="MC" Storyboard.TargetProperty="(UIElement.Opacity)">
                <EasingDoubleKeyFrame KeyTime="00:00:00" Value="1"/>
                <EasingDoubleKeyFrame KeyTime="00:00:02" Value="1"/>
                <EasingDoubleKeyFrame KeyTime="00:00:03.5000000" Value="0"/>
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>

    </Window.Resources>

    <Grid x:Name="LayoutRoot">
        <Grid x:Name="LayoutPrimary">
            <Grid.RowDefinitions>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="auto"/>
                <RowDefinition />
            </Grid.RowDefinitions>

            <Grid x:Name="CodeEditorContainer" Grid.Row="2">
                <Grid.RowDefinitions>
                    <RowDefinition x:Name="ColTC" Height="*"/>
                    <!--<RowDefinition Height="5"/>-->
                    <RowDefinition x:Name="ColEL" Height="auto" />
                    <RowDefinition Height="24"/>
                </Grid.RowDefinitions>

                <TabControl x:Name="TC" Margin="0,2,0,0" BorderThickness="1,1,1,0"/>
                <controls:MessageCard x:Name="MC" HorizontalAlignment="Right" VerticalAlignment="Bottom" Margin="0,0,32,24" Height="48">
                    <controls:MessageCard.Effect>
                        <DropShadowEffect BlurRadius="3" Opacity="0.3" ShadowDepth="3"/>
                    </controls:MessageCard.Effect>
                </controls:MessageCard>
                <!--<GridSplitter x:Name="BottomTabsGS" Grid.Row="1" HorizontalAlignment="Stretch"/>-->
                <controls:ErrorList x:Name="WErrorList" Grid.Row="1" MinHeight="200"/>
                <controls:EditorStatusBar x:Name="EditorSB" Grid.Row="2"/>

                <Grid x:Name="WC" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="32,32,0,0">
                    <Grid.Resources>
                        <Style x:Key="Style.SectionLabel" TargetType="{x:Type Label}">
                            <Setter Property="Padding" Value="0,28,0,5"/>
                            <Setter Property="FontFamily" Value="Segoe UI Semilight"/>
                            <Setter Property="FontSize" Value="18"/>
                        </Style>
                        <Style x:Key="Style.ActionLabel" TargetType="{x:Type TextBlock}">
                            <Setter Property="Foreground" Value="Blue"/>
                            <Setter Property="Cursor" Value="Hand"/>
                            <Setter Property="Padding" Value="0,0,0,5"/>
                        </Style>
                    </Grid.Resources>
                    <Grid.RowDefinitions>
                        <RowDefinition/>
                        <RowDefinition/>
                        <RowDefinition/>
                        <RowDefinition/>
                    </Grid.RowDefinitions>
                    <StackPanel Grid.Row="0" Orientation="Vertical">
                        <TextBlock FontFamily="Segoe UI Semilight" FontSize="36" Foreground="Gray">Volta</TextBlock>
                        <TextBlock FontFamily="Segoe UI" FontSize="20" Foreground="#FFB4B4B4">MiniC# code editor</TextBlock>
                    </StackPanel>
                    <StackPanel Grid.Row="1" Orientation="Vertical">
                        <Label Style="{StaticResource Style.SectionLabel}">Empezar</Label>
                        <TextBlock Style="{StaticResource Style.ActionLabel}" MouseLeftButtonDown="WCDoAction"
                                   Tag="newFile">Nuevo archivo</TextBlock>
                        <TextBlock Style="{StaticResource Style.ActionLabel}" MouseLeftButtonDown="WCDoAction"
                                   Tag="openFile">Abrir...</TextBlock>
                    </StackPanel>

                    <StackPanel x:Name="WCRecentContainer" Grid.Row="2">
                        <Label Style="{StaticResource Style.SectionLabel}">Reciente</Label>
                        <TextBlock Text="No hay elementos recientes"/>
                        <!--<TextBlock Style="{StaticResource Style.ActionLabel}">C:\Source\snippets\volta-sample2.txt</TextBlock>-->
                    </StackPanel>

                    <StackPanel Grid.Row="3" Orientation="Vertical">
                        <Label Style="{StaticResource Style.SectionLabel}">Ayuda</Label>
                        <TextBlock Style="{StaticResource Style.ActionLabel}" MouseLeftButtonDown="WCDoAction"
                                   Tag="about">Acerca de</TextBlock>
                    </StackPanel>
                </Grid>

                <!--
                <Label x:Name="LblEditorHint" HorizontalAlignment="Center" VerticalAlignment="Center" Padding="10" Grid.RowSpan="3"
                       Visibility="Hidden">
                    <StackPanel Orientation="Vertical">
                        <Path Data="{StaticResource Vector.FileCode}" Stretch="Uniform" Height="80">
                            <Path.Fill>
                                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                    <GradientStop Color="#FF628EF7"/>
                                    <GradientStop Color="#FF2170C5" Offset="1"/>
                                </LinearGradientBrush>
                            </Path.Fill>
                        </Path>
                        <TextBlock 
                            Padding="10"
                            FontFamily="Segoe UI Semilight"
                            FontSize="24"
                            Foreground="Gray"
                            Text="¡Bienvenido a Volta!"
                            TextAlignment="Center"
                            />
                        <TextBlock TextAlignment="Center" FontSize="16" Foreground="Gray">
                            Abra un archivo o cree uno nuevo para empezar.
                        </TextBlock>
                        <Button Style="{StaticResource VoltaButton}" Click="BtnNewFile_Click" Content="Nuevo archivo" HorizontalAlignment="Center" Padding="10,3"
                                Margin="0,10,0,0"/>
                    </StackPanel>
                </Label>
                -->

            </Grid>

            <Border x:Name="Toolbar" Grid.Row="1" Background="#FFF0F0F0">
                <Border.Effect>
                    <DropShadowEffect BlurRadius="2" Direction="270" Opacity="0.25" ShadowDepth="2"/>
                </Border.Effect>
                <ToolBarTray Background="White" IsLocked="True">
                    <ToolBarTray.Resources>
                        <Style TargetType="{x:Type Path}">
                            <Setter Property="Height" Value="15"/>
                            <Setter Property="Fill" Value="Gray"/>
                            <Setter Property="Stretch" Value="Uniform"/>
                            <Setter Property="Width" Value="18"/>
                        </Style>
                    </ToolBarTray.Resources>
                    <ToolBar Background="White">
                        <Button Click="ToolbarButton_Click" Tag="toolbar.new" ToolTip="Nuevo">
                            <Path Data="{StaticResource Vector.FilePlus}"/>
                        </Button>
                        <Button Click="ToolbarButton_Click" Tag="toolbar.open" ToolTip="Abrir">
                            <Path Data="{StaticResource Vector.FolderOpen}"/>
                        </Button>

                        <Button Click="ToolbarButton_Click" Tag="toolbar.save" ToolTip="Guardar">
                            <Path Data="{StaticResource Vector.ContentSave}"/>
                        </Button>
                        <!--
                        <Button Click="ToolbarButton_Click" Tag="toolbar.saveall" ToolTip="Guardar todo">
                            <Path Data="{StaticResource Vector.ContentSaveAll}"/>
                        </Button>
                        -->
                        <Separator/>

                        <Button Click="ToolbarButton_Click" Tag="toolbar.cut" ToolTip="Cortar">
                            <Path Data="{StaticResource Vector.ContentCut}"/>
                        </Button>
                        <Button Click="ToolbarButton_Click" Tag="toolbar.copy" ToolTip="Copiar">
                            <Path Data="{StaticResource Vector.ContentCopy}"/>
                        </Button>
                        <Button Click="ToolbarButton_Click" Tag="toolbar.paste" ToolTip="Pegar">
                            <Path Data="{StaticResource Vector.ContentPaste}"/>
                        </Button>

                        <Separator/>
                        <ComboBox MinWidth="100"  x:Name="CompilerSelect">
                            <ComboBoxItem Content="Delta" IsSelected="True"/>
                            <ComboBoxItem Content="Nabla"/>
                        </ComboBox>
                        <Button Click="ToolbarButton_Click" Tag="toolbar.buildrun" ToolTip="Compilar y ejecutar el documento actual">
                            <StackPanel Orientation="Horizontal">
                                <Path Data="{StaticResource Vector.Play}" Fill="Green"/>
                                <TextBlock Text="Compilar y ejecutar" Margin="3,0,0,0"/>
                            </StackPanel>
                        </Button>
                        <Separator/>
                        <Button Click="ToolbarButton_Click" Tag="toolbar.close" ToolTip="Cerrar el documento actual">
                            <StackPanel Orientation="Horizontal">
                                <Path Data="{StaticResource Vector.Close}" Fill="Red"/>
                                <TextBlock Text="Cerrar" Margin="3,0,0,0"/>
                            </StackPanel>
                        </Button>
                    </ToolBar>
                </ToolBarTray>
            </Border>

            <Menu Grid.Row="0" Background="White">
                <MenuItem Header="Archivo">
                    <MenuItem Header="Nuevo" Command="{Binding NewFileCommand}"/>
                    <MenuItem Header="Abrir..." Command="{Binding OpenFileCommand}"/>
                    <Separator/>
                    <MenuItem Header="Cerrar" Command="{Binding CloseTabCommand}"/>
                    <!--<MenuItem Header="Cerrar todo"/>-->
                    <Separator/>
                    <MenuItem Header="Guardar" Command="{Binding SaveFileCommand}"/>
                    <!--<MenuItem Header="Guardar todo"/>-->
                    <Separator/>
                    <MenuItem Header="Salir"/>
                </MenuItem>
                <MenuItem Header="Editar">
                    <MenuItem Header="Cortar" Command="{Binding CutCommand}"/>
                    <MenuItem Header="Copiar" Command="{Binding CopyCommand}"/>
                    <MenuItem Header="Pegar" Command="{Binding PasteCommand}"/>
                </MenuItem>
                <MenuItem Header="Ventana">
                    <MenuItem Header="Pantalla completa"/>
                </MenuItem>
                <MenuItem Header="Ayuda">
                    <MenuItem Header="Acerca de" Command="{Binding AboutCommand}"/>
                </MenuItem>
            </Menu>
        </Grid>

        <Grid x:Name="LayoutSecondary" d:IsHidden="True" >
            <Grid.Background>
                <SolidColorBrush Color="Black" Opacity="0.5"/>
            </Grid.Background>

            <Border x:Name="DlgAbout" Style="{StaticResource Dialog.Container}" Width="400">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="auto"/>
                        <ColumnDefinition/>
                    </Grid.ColumnDefinitions>
                    <Image Source="\Resources/volta@256px.png" Height="64" Width="64" VerticalAlignment="Top">
                        <Image.Effect>
                            <DropShadowEffect BlurRadius="3" Direction="270" Opacity="0.25" ShadowDepth="1"/>
                        </Image.Effect>
                    </Image>

                    <StackPanel Grid.Column="1" Orientation="Vertical" Margin="10,0,0,0">
                        <TextBlock Text="Volta" FontFamily="Segoe UI Semibold" FontSize="18" Foreground="Gray" Padding="0,3"/>
                        <Border Style="{StaticResource HorizontalDivider}" Margin="0,5,0,0"/>

                        <TextBlock Text="Proyecto del curso Compiladores e Intérpretes que se imparte en el Tecnológico de Costa Rica, I Semestre 2020."
                                   TextWrapping="Wrap" Margin="0,5,0,0" Foreground="DimGray"/>
                        <Border Style="{StaticResource HorizontalDivider}" Margin="0,5,0,0"/>

                        <TextBlock Text="Desarrolladores" FontFamily=" Segoe UI Semibold" FontSize="14" Padding="0,5,0,3" Foreground="DimGray"/>
                        <TextBlock Text="W. Benavides"/>
                        <TextBlock Text="M. Rivas"/>

                        <Button Click="SLHide" Content="Aceptar" HorizontalAlignment="Right" Margin="0,5,0,0" Padding="10,3" Style="{StaticResource VoltaButton}"/>
                    </StackPanel>
                </Grid>
            </Border>

            <!--
            <Border x:Name="DlgSavePendingChanges" Style="{StaticResource Dialog.Container}" MaxWidth="500">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="auto"/>
                        <RowDefinition/>
                    </Grid.RowDefinitions>

                    <TextBlock Text="¿Desea guardar los cambios pendientes en 'Mi archivo'?" TextWrapping="Wrap"/>

                    <StackPanel Grid.Row="1" HorizontalAlignment="Right" Orientation="Horizontal" Margin="0,10,0,0" >
                        <StackPanel.Resources>
                            <Style TargetType="{x:Type Button}">
                                <Setter Property="Padding" Value="10,3"/>
                                <Setter Property="Margin" Value="10,0,0,0"/>
                            </Style>
                        </StackPanel.Resources>
                        <Button Content="Guardar" Click="DlgPendingChangesBtnSave_Click"/>
                        <Button Content="Descartar" Click="DlgPendingChangesBtnDiscard_Click"/>
                        <Button Content="Cancelar" Click="SLHide"/>
                    </StackPanel>
                </Grid>
            </Border>

            <Border x:Name="DlgSettings" Style="{StaticResource Dialog.Container}" Width="500" d:IsHidden="True">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="auto"/>
                        <RowDefinition/>
                    </Grid.RowDefinitions>

                    <TextBlock Text="Ajustes" FontSize="20" Foreground="Gray" FontFamily="Segoe UI Semilight" />

                </Grid>
            </Border>
            -->
        </Grid>
    </Grid>

</Window>